@article{DifferentialEquations.jl-2017,
 author        = {Rackauckas, Christopher and Nie, Qing},
 journal       = {The Journal of Open Research Software},
 title         = {DifferentialEquations.jl – A Performant and Feature-Rich Ecosystem for Solving Differential Equations in Julia},
 number        = {1},
 doi           = {10.5334/jors.151},
 keywords      = {Applied Mathematics},
 year          = {2017},
 url           = {https://app.dimensions.ai/details/publication/pub.1085583166 and http://openresearchsoftware.metajnl.com/articles/10.5334/jors.151/galley/245/download/},
 volume        = {5}
}

@article{JSSv098i16,
 pages         = {1--30},
 author        = {Besançon, Mathieu and Papamarkou, Theodore and Anthoff, David and Arslan, Alex and Byrne, Simon and Lin, Dahua and Pearson, John},
 journal       = {Journal of Statistical Software},
 title         = {Distributions.jl: Definition and Modeling of Probability Distributions in the JuliaStats Ecosystem},
 number        = {16},
 keywords      = {Julia; distributions; modeling; interface; mixture; KDE; sampling; probabilistic programming; inference},
 doi           = {10.18637/jss.v098.i16},
 year          = {2021},
 url           = {https://www.jstatsoft.org/v098/i16},
 volume        = {98}
}

@misc{Distributions.jl-2019,
 doi           = {10.5281/zenodo.2647458},
 author        = {Lin, Dahua and White, John  Myles and Byrne, Simon and Bates, Douglas and Noack, Andreas and Pearson, John and Arslan, Alex and Squire, Kevin and Anthoff, David and Papamarkou, Theodore and Besançon, Mathieu and Drugowitsch, Jan and Schauer, Moritz and contributors},
 year          = {2019},
 url           = {https://doi.org/10.5281/zenodo.2647458},
 month         = {July},
 title         = {{JuliaStats/Distributions.jl: a Julia package for probability distributions and associated functions}}
}

@article{widmann2022delaydiffeq,
 author        = {Widmann, David and Rackauckas, Chris},
 year          = {2022},
 journal       = {arXiv preprint arXiv:2208.12879},
 title         = {DelayDiffEq: Generating Delay Differential Equation Solvers via Recursive Embedding of Ordinary Differential Equation Solvers}
}

@article{BenchmarkTools.jl-2016,
 primaryClass  = {cs.PF},
 author        = {{Chen}, Jiahao and {Revels}, Jarrett},
 adsnote       = {Provided by the SAO/NASA Astrophysics Data System},
 month         = {Aug},
 journal       = {arXiv e-prints},
 archivePrefix = {arXiv},
 title         = {{Robust benchmarking in noisy environments}},
 eid           = {arXiv:1608.04295},
 keywords      = {Computer Science - Performance, 68N30, B.8.1, D.2.5},
 eprint        = {1608.04295},
 year          = {2016},
 adsurl        = {https://ui.adsabs.harvard.edu/abs/2016arXiv160804295C}
}

@misc{VertexSafeGraphs.jl,
 howpublished  = {\url{https://github.com/matbesancon/VertexSafeGraphs.jl}},
 author        = {Besançon, Mathieu},
 version       = {v0.1.0},
 year          = {2019},
 month         = {5},
 title         = {{VertexSafeGraphs.jl}}
}

@article{Optim.jl-2018,
 number        = {24},
 pages         = {615},
 doi           = {10.21105/joss.00615},
 author        = {Mogensen, Patrick Kofod and Riseth, Asbj{\o}rn Nilsen},
 year          = {2018},
 volume        = {3},
 journal       = {Journal of Open Source Software},
 title         = {Optim: A mathematical optimization package for {Julia}}
}

@article{Zagatti2024,
 pages         = {133},
 author        = {Zagatti, G. A. and Isaacson, S. A. and Rackauckas, C. and Ilin, V. and Ng, S.K. and Bressan, S.},
 journal       = {Proceedings of the JuliaCon Conferences},
 title         = {Extending JumpProcesses.jl for fast point process simulation with time-varying intensities},
 publisher     = {The Open Journal},
 number        = {58},
 doi           = {10.21105/jcon.00133},
 year          = {2024},
 url           = {https://doi.org/10.21105/jcon.00133},
 volume        = {6}
}

@misc{Graphs2021,
 author        = {Fairbanks, James and Besan{\c{c}}on, Mathieu and Simon, Sch{\"o}lly and Hoffiman, J{\'u}lio and Eubank, Nick and Karpinski, Stefan},
 year          = {2021},
 url           = {https://github.com/JuliaGraphs/Graphs.jl/},
 title         = {JuliaGraphs/Graphs.jl: an optimized graphs package for the Julia programming language}
}

@article{10.1145/3511528.3511535,
 pages         = {92–96},
 issue_date    = {September 2021},
 author        = {Gowda, Shashi and Ma, Yingbo and Cheli, Alessandro and Gw\'{o}\'{z}zd\'{z}, Maja and Shah, Viral B. and Edelman, Alan and Rackauckas, Christopher},
 month         = {jan},
 journal       = {ACM Commun. Comput. Algebra},
 title         = {High-Performance Symbolic-Numerics via Multiple Dispatch},
 publisher     = {Association for Computing Machinery},
 number        = {3},
 doi           = {10.1145/3511528.3511535},
 address       = {New York, NY, USA},
 year          = {2022},
 url           = {https://doi.org/10.1145/3511528.3511535},
 volume        = {55},
 numpages      = {5},
 abstract      = {As mathematical computing becomes more democratized in high-level languages, high-performance symbolic-numeric systems are necessary for domain scientists and engineers to get the best performance out of their machine without deep knowledge of code optimization. Naturally, users need different term types either to have different algebraic properties for them, or to use efficient data structures. To this end, we developed Symbolics.jl, an extendable symbolic system which uses dynamic multiple dispatch to change behavior depending on the domain needs. In this work we detail an underlying abstract term interface which allows for speed without sacrificing generality. We show that by formalizing a generic API on actions independent of implementation, we can retroactively add optimized data structures to our system without changing the pre-existing term rewriters. We showcase how this can be used to optimize term construction and give a 113x acceleration on general symbolic transformations. Further, we show that such a generic API allows for complementary term-rewriting implementations. Exploiting this feature, we demonstrate the ability to swap between classical term-rewriting simplifiers and e-graph-based term-rewriting simplifiers. We illustrate how this symbolic system improves numerical computing tasks by showcasing an e-graph ruleset which minimizes the number of CPU cycles during expression evaluation, and demonstrate how it simplifies a real-world reaction-network simulation to halve the runtime. Additionally, we show a reaction-diffusion partial differential equation solver which is able to be automatically converted into symbolic expressions via multiple dispatch tracing, which is subsequently accelerated and parallelized to give a 157x simulation speedup. Together, this presents Symbolics.jl as a next-generation symbolic-numeric computing environment geared towards modeling and simulation.}
}

@article{rackauckas2017adaptive,
 number        = {7},
 publisher     = {NIH Public Access},
 pages         = {2731},
 author        = {Rackauckas, Christopher and Nie, Qing},
 year          = {2017},
 volume        = {22},
 journal       = {Discrete and continuous dynamical systems. Series B},
 title         = {Adaptive methods for stochastic differential equations via natural embeddings and rejection sampling with memory}
}

@misc{Roots.jl,
 howpublished  = {\url{https://github.com/JuliaMath/Roots.jl}},
 author        = {Verzani, John},
 year          = {2020},
 title         = {{Roots.jl}: Root finding functions for Julia}
}

@article{Julia-2017,
 pages         = {65--98},
 author        = {Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B},
 journal       = {SIAM {R}eview},
 title         = {Julia: A fresh approach to numerical computing},
 publisher     = {SIAM},
 number        = {1},
 doi           = {10.1137/141000671},
 year          = {2017},
 url           = {https://epubs.siam.org/doi/10.1137/141000671},
 volume        = {59}
}

@article{PlotsJL,
 publisher     = {Journal of Open Research Software},
 doi           = {https://doi.org/10.5334/jors.431},
 keywords      = {Graphics (cs.GR), FOS: Computer and information sciences, FOS: Computer and information sciences, I.3.3},
 author        = {Christ, Simon and Schwabeneder, Daniel and Rackauckas, Christopher and Borregaard, Michael Krabbe and Breloff, Thomas},
 copyright     = {Creative Commons Attribution 4.0 International},
 year          = {2023},
 url           = {https://openresearchsoftware.metajnl.com/articles/10.5334/jors.431/},
 title         = {Plots.jl -- a user extendable plotting API for the julia programming language}
}

@misc{SimpleWeightedGraphs.jl,
 author        = {contributors, JuliaGraphs},
 version       = {v1.4.0},
 year          = {2023},
 url           = {https://github.com/JuliaGraphs/SimpleWeightedGraphs.jl},
 month         = {4},
 title         = {SimpleWeightedGraphs.jl}
}

@misc{HCubature,
 howpublished  = {\url{https://github.com/JuliaMath/HCubature.jl}},
 author        = {Johnson, Steven  G.},
 year          = {2017},
 title         = {The {HCubature.jl} package for multi-dimensional adaptive integration in {Julia}}
}

@article{Genz1980,
 pages         = {295--302},
 doi           = {10.1016/0771-050x(80)90039-x},
 author        = {Genz, A.  C. and Malik, A.  A.},
 year          = {1980},
 volume        = {6},
 journal       = {Journal of Computational and Applied Mathematics},
 title         = {Remarks on algorithm 006: An adaptive algorithm for numerical integration over an $N$-dimensional rectangular region}
}

@article{10.1145/1824801.1824814,
 issue_date    = {September 2010},
 author        = {Davis, Timothy A. and Palamadai Natarajan, Ekanathan},
 month         = {sep},
 journal       = {ACM Trans. Math. Softw.},
 title         = {Algorithm 907: KLU, A Direct Sparse Solver for Circuit Simulation Problems},
 articleno     = {36},
 publisher     = {Association for Computing Machinery},
 number        = {3},
 doi           = {10.1145/1824801.1824814},
 keywords      = {LU factorization, circuit simulation, sparse matrices},
 address       = {New York, NY, USA},
 year          = {2010},
 url           = {https://doi.org/10.1145/1824801.1824814},
 volume        = {37},
 numpages      = {17}
}

@misc{quadgk,
 howpublished  = {\url{https://github.com/JuliaMath/QuadGK.jl}},
 author        = {Johnson, Steven  G.},
 year          = {2013},
 title         = {{QuadGK.jl}: {G}auss--{K}ronrod integration in {J}ulia}
}

@inproceedings{ge2018t,
 biburl        = {https://dblp.org/rec/bib/conf/aistats/GeXG18},
 pages         = {1682--1690},
 booktitle     = {International Conference on Artificial Intelligence and Statistics,
               {AISTATS} 2018, 9-11 April 2018, Playa Blanca, Lanzarote, Canary Islands,
               Spain},
 author        = {Ge, Hong and Xu, Kai and Ghahramani, Zoubin},
 year          = {2018},
 url           = {http://proceedings.mlr.press/v84/ge18b.html},
 title         = {Turing: a language for flexible probabilistic inference}
}

@article{Legat2024,
 pages         = {93},
 author        = {Legat, Benoît},
 journal       = {Proceedings of the JuliaCon Conferences},
 title         = {MutableArithmetics: An API for mutable operations},
 publisher     = {The Open Journal},
 number        = {58},
 doi           = {10.21105/jcon.00093},
 year          = {2024},
 url           = {https://doi.org/10.21105/jcon.00093},
 volume        = {6}
}

@article{FFTW.jl-2005,
 number        = {2},
 pages         = {216--231},
 doi           = {10.1109/JPROC.2004.840301},
 author        = {Frigo, Matteo and Johnson, Steven~G.},
 year          = {2005},
 volume        = {93},
 journal       = {Proceedings of the IEEE},
 title         = {The Design and Implementation of {FFTW3}}
}
